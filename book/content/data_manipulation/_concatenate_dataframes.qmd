## Concatenate DataFrames

To perform concatenations, the `concat()` method must be used.  
In this section, we will see **vertical**, **horizontal** and **diagonal** concatenation.

Before we need to create some datasets to run our examples. Click to expand it! ðŸ‘‡

```{r}
#| label: creation-examples-datasets-concat
#| code-fold: true
#| results: 'hide'

dfup <- pl$DataFrame(
  col1 = as_polars_series(c("a")),
  col2 = as_polars_series(c("b")),
  col3 = as_polars_series(c("c"))
)
dfdown <- pl$DataFrame(
  col1 = as_polars_series(c("x")),
  col2 = as_polars_series(c("y")),
  col3 = as_polars_series(c("z"))
)
dfleft <- pl$DataFrame(col1 = as_polars_series(c("a","b","c")))
dfright <- pl$DataFrame(col2 = as_polars_series(c("x","y","z")))

dfup_df <- dfup$to_data_frame()
dfdown_df <- dfdown$to_data_frame()
dfleft_df <- dfleft$to_data_frame()
dfright_df <- dfright$to_data_frame()

dfup_dt <- as.data.table(dfup)
dfdown_dt <- as.data.table(dfdown)
dfleft_dt <- as.data.table(dfleft)
dfright_dt <- as.data.table(dfright)
```

### Vertical concatenation

To concatenate multiple `DataFrames` vertically (=by row), you can use the `concat()` method and the argument `how = "vertical"`.

::: {.panel-tabset}
## polars

```{r}
#| label: vertical-concatenation-polars
pl$concat(list(dfup,dfdown),how = "vertical")
```

## R base

```{r}
#| label: vertical-concatenation-rbase
rbind(dfup_df,dfdown_df)
```

## dplyr

```{r}
#| label: vertical-concatenation-dplyr
bind_rows(list(dfup_df,dfdown_df))
```

## data.table

```{r}
#| label: vertical-concatenation-datatable
rbindlist(list(dfup_dt, dfdown_dt))
```
:::

### Horizontal concatenation

To concatenate multiple `DataFrames` horizontally (=by col), you can use the `concat()` method and the argument `how = "horizontal"`.

::: {.panel-tabset}
## polars

```{r}
#| label: horizontal-concatenation-polars
pl$concat(list(dfleft,dfright),how = "horizontal")
```

## R base

```{r}
#| label: horizontal-concatenation-rbase
cbind(dfleft_df,dfright_df)
```

## dplyr

```{r}
#| label: horizontal-concatenation-dplyr
cbind(list(dfleft_df,dfright_df))
```

## data.table

```{r}
#| label: horizontal-concatenation-datatable
data.table(dfleft_dt, dfright_dt)
```
:::

### Diagonal concatenation

To concatenate multiple `DataFrames` diagonally, you can use the `concat()` method and the argument `how = "diagonal"`.  
Diagonal concatenation is useful when the column names are not identical in initial `DataFrames`. 

::: {.panel-tabset}
## polars

```{r}
#| label: diagonal-concatenation-polars

dfup <- dfup$rename(col3="col4")
pl$concat(list(dfup,dfdown),how = "diagonal")
```

## R base

```{r}
#| label: diagonal-concatenation-rbase
dfup_df <- dfup$to_data_frame()
dfup_df[setdiff(names(dfdown_df), names(dfup_df))] <- NA
dfdown_df[setdiff(names(dfup_df), names(dfdown_df))] <- NA
rbind(dfup_df,dfdown_df)
```

## dplyr

```{r}
#| label: diagonal-concatenation-dplyr
dfup_df <- dfup$to_data_frame()
bind_rows(list(dfup_df,dfdown_df))
```

## data.table

```{r}
#| label: diagonal-concatenation-datatable
dfup_dt <- as.data.table(dfup)
rbindlist(list(dfup_dt, dfdown_dt),fill = TRUE)
```
:::
